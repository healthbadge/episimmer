import sys
import os.path as osp
import Read_Example
import Algorithm
import matplotlib.pyplot as plt

def get_example_path():
    return sys.argv[1]



if __name__=="__main__":
    path=get_example_path()
    read_obj=Read_Example.Read_Example(path)

    states1 = ["Infected", "Recovered"]
    states2 = ["Exposed", "Infected", "Recovered"]



    ### Vulnerable Agents
    # Type 1
    # world_obj=read_obj.world_obj
    # mc_obj=Algorithm.Vulnerable_Agent_MC1(world_obj, states2)
    # mc_obj.do_MC(10)
    # print(mc_obj.get_maximum_vulnerable_agents(10))
    # print(mc_obj.get_minimum_vulnerable_agents(10))

    # Type 2
    # begin_count_state1 = "Infected"
    # begin_count_state2 = "Exposed"
    #
    # mc_obj = Algorithm.Vulnerable_Agent_MC2(read_obj, begin_count_state2)
    # mc_obj.do_MC(10)
    # print(mc_obj.get_maximum_vulnerable_agents(10))
    # print(mc_obj.get_minimum_vulnerable_agents(10))


    ### Agent Vulnerability
    # # Type 1
    # mc_obj = Algorithm.Agent_Vulnerabilities_MC(read_obj, states2)
    # mc_obj.do_MC(50, 1)
    # print(mc_obj.get_maximum_agent_vulnerability(10))
    # print(mc_obj.get_minimum_agent_vulnerability(10))

    # Type 2
    # mc_obj = Algorithm.BanditAlgos(read_obj, states2)
    # mc_obj.do_MC(10)
    # print(mc_obj.get_maximum_agent_vulnerability(10))
    # print(mc_obj.get_minimum_agent_vulnerability(10))
    #
    # m1 = mc_obj.get_maximum_agent_vulnerability(10)
    # m2 = mc_obj.get_minimum_agent_vulnerability(10)
    # maxim = max(m1.values())
    # minim = min(m2.values())
    # diff =  maxim - minim
    # print("Max - " + str(maxim), "Min - " + str(minim))
    # print("MaxMinDiff - " + str(diff))
    # print("Variance - " + str(diff/maxim*100))

    # Type 3
    # mc_obj = Algorithm.Agent_Vulnerabilities_MC3(read_obj,states2,[10,25])
    # mc_obj.do_MC(10,1)
    # print(mc_obj.get_maximum_agent_vulnerability(10))
    # print(mc_obj.get_minimum_agent_vulnerability(10))
